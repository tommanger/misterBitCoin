{"version":3,"sources":["pages/HomePage/HomePage.js","cmps/ContactPreview/ContactPreview.js","cmps/ContactList/ContactList.js","pages/ContactPage/ContactPage.js","services/BitcoinService.js","cmps/Chart/Chart.js","pages/StatisticPage/StatisticPage.js","services/ContactService.js","cmps/TransferFund/TransferFund.js","services/StorageService.js","services/UserService.js","cmps/MovesList/MovesList.js","pages/ContactDetailsPage/ContactDetailsPage.js","pages/Signup/Signup.js","cmps/InputEdit/InputEdit.js","pages/ContactEditPage/ContactEditPage.js","App.js","serviceWorker.js","store/ContactStore.js","store/UserStore.js","index.js","store/RootStore.js"],"names":["HomePage","inject","observer","userStore","_this","props","store","UserStore","this","loadUser","user","react_default","a","createElement","name","coins","moves","Component","ContactPreview","_ref","contact","className","src","concat","ContactList","contacts","onSetSelected","map","Link","to","_id","key","cmps_ContactPreview_ContactPreview","ContactPage","contactStore","ContactStore","fetchContacts","ev","term","target","value","placeholder","id","onChange","setFilter","bind","type","cmps_ContactList_ContactList","_callee","rate","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_callee2","chart","_context2","BitcoinService","getRate","getMarketPrice","newChart","values","reduce","currChart","push","y","build","data","style","stroke","fill","fillOpacity","StatisticPage","state","setState","console","log","_this$state","Chart","email","phone","_addContact","Promise","resolve","reject","length","arguments","undefined","txt","possible","i","charAt","Math","floor","random","_makeId","ContactService","getContacts","filterBy","contactsToReturn","filter","toLocaleLowerCase","includes","sort","b","getContactById","find","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","getEmptyContact","TransferFund","onTransferCoin","amount","onClick","StorageService","any","localStorage","JSON","stringify","load","str","parse","UserService","signup","addMove","at","Date","now","_reduceCoins","getMoves","contactId","move","MovesList","ContactDetailsPage","match","params","cmps_TransferFund_TransferFund","TransferCoin","cmps_MovesList_MovesList","onClose","Signup","preventDefault","saveUser","history","onSubmit","signupUser","InputEdit","onChangeInput","ContactEditPage","inputs","Object","keys","updateContact","then","currContact","_this2","_this3","item","cmps_InputEdit_InputEdit","changeValue","observable","PrivateRoute","Route","Redirect","App","HashRouter","NavLink","exact","Switch","App_PrivateRoute","path","component","render","pages_ContactEditPage_ContactEditPage","ContactDetailsPage_ContactDetailsPage","pages_Signup_Signup","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootStore","classCallCheck","initializerDefineProperty","ContactStore_descriptor","conactId","updatedContact","action","UserStore_descriptor","RootStore","configureDevtool","logEnabled","ReactDOM","index_module","Fragment","src_App","mobx_react_devtools_default","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4130ddcd.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n\r\n    userStore = this.props.store.UserStore;\r\n    \r\n    componentDidMount() {\r\n        this.userStore.loadUser()\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.userStore \r\n        return (\r\n            <div>\r\n                {\r\n                user &&\r\n                <div>\r\n                    <h2>Hello {user.name}</h2>\r\n                    <h4>Coins: {user.coins}</h4>\r\n                    <h4>{user.moves}</h4>\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\n\r\nconst ContactPreview = ({ contact }) => (\r\n    <div className=\"contact-prev\">\r\n        <span>{contact.name}</span>\r\n        <img className=\"img-contact\" src={`https://robohash.org/${contact.name}.png`}></img>\r\n    </div >\r\n)\r\n\r\nexport default ContactPreview","import React from 'react'\r\nimport ContactPreview from '../../cmps/ContactPreview/ContactPreview'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ContactList = ({ contacts, onSetSelected }) => (\r\n    <div>\r\n        <ul>\r\n            {\r\n                contacts.map(contact =>\r\n                    <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                        <li >\r\n                            <ContactPreview contact={contact}/>\r\n                        </li>\r\n                    </Link>\r\n                )}\r\n\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default ContactList","import React, { Component } from 'react'\r\n\r\nimport ContactList from '../../cmps/ContactList/ContactList'\r\nimport { Link } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, computed } from 'mobx';\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactPage extends Component {\r\n\r\n    store = this.props.store;\r\n    contactStore = this.props.store.ContactStore;\r\n\r\n    componentDidMount() {\r\n        this.contactStore.fetchContacts()\r\n    }\r\n\r\n    async setFilter(ev) {\r\n        this.contactStore.fetchContacts({ term: ev.target.value })\r\n    }\r\n    render() {\r\n        const { contacts } = this.contactStore\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Link to=\"/contact/edit\">\r\n                        <button>Add Contact</button>\r\n                    </Link>\r\n                    <input placeholder=\"filterd list\" id=\"inputFilter\" onChange={this.setFilter.bind(this)} type=\"text\" />\r\n                    {contacts &&\r\n                        <ContactList contacts={contacts} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage","async function getRate(coins){\r\n    const rate = await fetch(`https://blockchain.info/tobtc?currency=USD&value=${coins}`)\r\n    return rate.json()\r\n}\r\n\r\nasync function getMarketPrice(){\r\n    const chart = await fetch('https://api.blockchain.info/charts/market-price?format=json&cors=true')\r\n    return chart.json()\r\n}\r\nfunction getConfirmedTransactions(){\r\n\r\n}\r\n\r\nexport default{\r\n    getRate,\r\n    getMarketPrice\r\n}","import React from 'react'\r\nimport { Sparklines, SparklinesLine ,SparklinesBars} from 'react-sparklines';\r\n\r\n\r\nconst ContactList = ({ chart }) => {\r\n    var newChart = chart.values.reduce((newChart, currChart) => {\r\n        newChart.push(currChart.y)\r\n        return newChart\r\n    }, [])\r\n    return <div>\r\n        <Sparklines data={newChart}>\r\n            <SparklinesBars style={{ stroke: \"white\", fill: \"#41c3f9\", fillOpacity: \".25\" }} />\r\n            <SparklinesLine style={{ stroke: \"#41c3f9\", fill: \"green\" }} />\r\n        </Sparklines>\r\n    </div>\r\n}\r\n\r\nexport default ContactList","import React, { Component } from 'react'\r\n\r\nimport BitcoinService from '../../services/BitcoinService'\r\nimport Chart from '../../cmps/Chart/Chart'\r\n\r\nexport default class StatisticPage extends Component {\r\n    state = { rate: null, chart: null }\r\n\r\n    async componentDidMount() {\r\n        const rate = await BitcoinService.getRate(10)\r\n        this.setState({rate})\r\n        const chart = await BitcoinService.getMarketPrice()\r\n        console.log(chart)\r\n        \r\n        this.setState({chart})\r\n    }\r\n\r\n    render() {\r\n        const {rate, chart} = this.state\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    rate &&\r\n                    <h4>BTC: {rate}</h4>\r\n                }\r\n                {\r\n                    chart&&\r\n                    <Chart chart={chart}/>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy) {\n      const {term} = filterBy;\n      contactsToReturn = contacts.filter( contact => {\n        return contact.name.toLocaleLowerCase().includes(term) ||\n               contact.phone.toLocaleLowerCase().includes(term) ||\n               contact.email.toLocaleLowerCase().includes(term)\n      })\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return new Promise((resolve, reject) => { \n    const c = contacts.filter( contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n             contact.phone.toLocaleLowerCase().includes(term) ||\n             contact.email.toLocaleLowerCase().includes(term)\n    })\n\n    resolve(c)\n  })\n}\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  filter,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import React from 'react'\r\n\r\n\r\nconst TransferFund = ({ contact, onTransferCoin }) => {\r\n    let amount = 0;\r\n    return (\r\n        <div>\r\n            <h2>Transfer coins to {contact.name}</h2>\r\n            Amount: <input name=\"amount\" type=\"text\" onChange={ev => amount = ev.target.value} />\r\n            <button onClick={() => onTransferCoin(amount)}>Transfer</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransferFund","export default {\r\n    store,\r\n    load\r\n}\r\n\r\nfunction store(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction load(key) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n}\r\n","import StorageService from './StorageService'\r\n\r\nexport default {\r\n    loadUser,\r\n    signup,\r\n    addMove,\r\n    getMoves\r\n}\r\n\r\nvar user;\r\n\r\nfunction loadUser() {\r\n    user = StorageService.load('user')\r\n    return user\r\n}\r\n\r\nfunction signup(name) {\r\n    user = {\r\n        name,\r\n        coins: 100, \r\n        moves: []\r\n    }\r\n    StorageService.store('user', user)\r\n    return user\r\n}\r\nfunction getMoves(contactId){\r\n    return user.moves.filter(move => move._id === contactId)\r\n}\r\nfunction addMove(amount, contact) {\r\n    const {_id, name } = contact\r\n    user.moves.push({\r\n        _id,\r\n        to: name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    _reduceCoins(amount)\r\n    StorageService.store('user', user)\r\n}\r\n\r\nfunction _reduceCoins(amount) {\r\n    user.coins -= amount\r\n    StorageService.store('user', user)\r\n}","import React from 'react'\r\n\r\n\r\nconst MovesList = ({ moves }) => {\r\n    return (\r\n        <div>\r\n            <h2>Your Moves:</h2>\r\n            {   \r\n                moves.map(move =>\r\n                    <div key={move._id}>\r\n                        <h4>{move.amount}</h4>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovesList","import React, { Component } from 'react'\r\nimport ContactService from '../../services/ContactService'\r\nimport { Link } from 'react-router-dom';\r\nimport TransferFund from '../../cmps/TransferFund/TransferFund'\r\nimport UserService from '../../services/UserService'\r\nimport MoveList from '../../cmps/MovesList/MovesList'\r\n\r\nexport default class ContactDetailsPage extends Component {\r\n    state = { contact: null }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const contact = await ContactService.getContactById(id)\r\n        this.setState({ contact })\r\n    }\r\n    TransferCoin(ev){\r\n        UserService.addMove(ev,this.state.contact)\r\n    }\r\n    getMoves(){\r\n        if(!this.state.contact) return []\r\n        return UserService.getMoves(this.state.contact._id)\r\n    }\r\n    render() {\r\n        const { contact } = this.state\r\n        const moves = this.getMoves()\r\n        return (\r\n            <div>\r\n                {contact &&\r\n                    <div>\r\n                        <h2>{contact.name}</h2>\r\n                        <h4>{contact.email}</h4>\r\n                        <h4>{contact.phone}</h4>\r\n                        <TransferFund onTransferCoin={this.TransferCoin.bind(this)} contact={contact}/>\r\n                        <MoveList moves={moves}/>\r\n                        <Link to=\"/contact\">\r\n                            <button onClick={this.props.onClose}>back to list</button>\r\n                        </Link>\r\n                        <Link to={`/contact/edit/${contact._id}`}>\r\n                            <button>Edit contact</button>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass Signup extends Component {\r\n\r\n    userStore = this.props.store.UserStore;\r\n\r\n    user = ''\r\n    \r\n    saveUser(ev){\r\n        this.user = ev.target.value\r\n    }\r\n\r\n    signupUser(ev){\r\n        ev.preventDefault()\r\n        this.userStore.saveUser(this.user)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.signupUser.bind(this)}>\r\n                    <input onChange={this.saveUser.bind(this)} type=\"text\" placeholder=\"Enter your name\" />\r\n                    <button>Signup</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React from 'react'\r\n\r\n\r\nconst InputEdit = (props) => {\r\n    const onChange = (ev) => props.onChangeInput(props.name, ev.target.value)\r\n\r\n    return (\r\n        <input type={props.type || 'text'} name={props.name} value={props.value} onChange={onChange}/>\r\n    )\r\n}\r\n\r\nexport default InputEdit","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, computed } from 'mobx';\r\nimport InputEdit from '../../cmps/InputEdit/InputEdit'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactEditPage extends Component {\r\n    contactStore = this.props.store.ContactStore;\r\n\r\n    @observable\r\n    contact = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n    inputs = Object.keys(this.contact)\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (!id) return\r\n        this.contact = await this.contactStore.getContactById(id)\r\n    }\r\n\r\n    async saveContact(ev) {\r\n        ev.preventDefault()\r\n        await this.contactStore.updateContact(this.contact)\r\n            .then(currContact => {\r\n                this.props.history.push(`/contact/${currContact._id || ''}`)\r\n            })\r\n    }\r\n    deleteContact() {\r\n        this.contactStore.deleteContact(this.contact._id)\r\n        this.props.history.push('/contact')\r\n    }\r\n    changeValue(name, value) {\r\n        this.contact[name] = value\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.saveContact.bind(this)}>\r\n                    {\r\n                        this.inputs.map(item =>\r\n                            <InputEdit name={item}\r\n                                value={this.contact[item]}\r\n                                onChangeInput={this.changeValue.bind(this)} />\r\n                        )\r\n                    }\r\n                    <button>{this.contact._id ? 'save' : 'add'}</button>\r\n                </form>\r\n                <Link to={`/contact/${this.contact._id || ''}`}>\r\n                    <button>Back</button>\r\n                </Link>\r\n                {\r\n                    this.contact._id &&\r\n                    <button onClick={this.deleteContact.bind(this)}>Delete</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactEditPage","import React, { Component } from 'react';\nimport './assets/App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport ContactPage from './pages/ContactPage/ContactPage';\nimport StatisticPage from './pages/StatisticPage/StatisticPage';\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage';\nimport SignupPage from './pages/Signup/Signup';\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage';\nimport { observer, inject } from 'mobx-react';\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  NavLink,\n  Redirect\n} from 'react-router-dom';\n\n\nconst PrivateRoute = (props) => {\n  return props.user ? <Route {...props} /> : <Redirect to=\"/signup\" />\n}\n@inject('store')\n@observer\nclass App extends Component {\n  userStore = this.props.store.UserStore;\n\n  componentDidMount() {\n    this.userStore.loadUser()\n}\n\n  render() {\n    const {user} = this.userStore \n\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav>\n            <ul>\n              <NavLink exact to=\"/\">\n                <li>Home</li>\n              </NavLink>\n              <NavLink to=\"/contact\">\n                <li>contact page</li>\n              </NavLink>\n              <NavLink to=\"/StatisticPage\">\n                <li>Statistic Page</li>\n              </NavLink>\n            </ul>\n          </nav>\n\n          <Switch>\n            <PrivateRoute user={user} path=\"/\" exact component={HomePage} />\n            <PrivateRoute user={user} path=\"/StatisticPage\" component={StatisticPage} />\n            <PrivateRoute\n              user={user}\n              path=\"/contact/edit/:id?\"\n              render={props => {\n                return <ContactEditPage {...props} />;\n              }}\n            />\n            <PrivateRoute\n              user={user}\n              path=\"/contact/:id\"\n              render={props => {\n                return <ContactDetails {...props} />;\n              }}\n            />\n\n            <Route path=\"/signup\" render={props => {\n              return <SignupPage {...props}/>\n            }} />\n            <PrivateRoute user={user} path=\"/contact\" component={ContactPage} />\n\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ContactService from '../services/ContactService'\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class ContactStore {\r\n  @observable\r\n  contacts = [];\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @action\r\n  async fetchContacts(filter) {\r\n    this.contacts = await ContactService.getContacts(filter)\r\n  }\r\n\r\n  @action\r\n  deleteContact(conactId) {\r\n    ContactService.deleteContact(conactId)\r\n  }\r\n\r\n  @action\r\n  updateContact(updatedContact){\r\n    return ContactService.saveContact(updatedContact)\r\n  }\r\n\r\n  @action\r\n  async getContactById(id){\r\n      return await ContactService.getContactById(id)\r\n  }\r\n}\r\n\r\n","import { observable, action } from 'mobx';\r\nimport UserService from '../services/UserService'\r\n\r\n\r\nexport default class UserStore {\r\n    @observable\r\n    user = {};\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n    @action\r\n    loadUser() {\r\n        this.user = UserService.loadUser()\r\n    }\r\n\r\n    @action\r\n    saveUser(user){\r\n        this.user = UserService.signup(user)\r\n    }\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react';\nimport DevTools, { configureDevtool } from 'mobx-react-devtools';\n\nconst rootStore = new RootStore();\n\nconfigureDevtool({\n    // Turn on logging changes button programmatically:\n    logEnabled: true,\n    // Turn off displaying components updates button programmatically:\n  //   updatesEnabled: false,\n    // Log only changes of type `reaction`\n    // (only affects top-level messages in console, not inside groups)\n  //   logFilter: change => change.type === 'reaction'\n  });\n\n  ReactDOM.render(\n    <Provider store={rootStore}>\n      <React.Fragment>\n        <App />\n        <DevTools />\n      </React.Fragment>\n    </Provider>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.register();","import ContactStore from './ContactStore';\r\nimport UserStore from './UserStore'\r\n\r\nexport default class RootStore {\r\n    constructor(){\r\n        this.ContactStore = new ContactStore(this)\r\n        this.UserStore = new UserStore(this)\r\n    }\r\n}"],"sourceRoot":""}