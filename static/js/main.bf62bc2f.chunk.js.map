{"version":3,"sources":["pages/HomePage/HomePage.js","cmps/ContactPreview/ContactPreview.js","cmps/ContactList/ContactList.js","pages/ContactPage/ContactPage.js","services/BitcoinService.js","cmps/Chart/Chart.js","pages/StatisticPage/StatisticPage.js","cmps/InputEdit/InputEdit.js","cmps/TransferFund/TransferFund.js","cmps/MovesList/MovesList.js","pages/ContactDetailsPage/ContactDetailsPage.js","pages/Signup/Signup.js","pages/ContactEditPage/ContactEditPage.js","App.js","serviceWorker.js","services/ContactService.js","store/ContactStore.js","services/StorageService.js","services/UserService.js","store/UserStore.js","index.js","store/RootStore.js"],"names":["HomePage","inject","observer","userStore","_this","props","store","UserStore","this","loadUser","user","react_default","a","createElement","className","name","coins","Component","ContactPreview","_ref","contact","src","concat","ContactList","contacts","onSetSelected","map","Link","to","_id","key","cmps_ContactPreview_ContactPreview","ContactPage","contactStore","ContactStore","fetchContacts","ev","term","target","value","placeholder","id","onChange","setFilter","bind","type","cmps_ContactList_ContactList","_callee","rate","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_callee2","chart","_context2","BitcoinService","getRate","getMarketPrice","newChart","values","reduce","currChart","push","y","build","data","style","stroke","fill","fillOpacity","StatisticPage","state","setState","console","log","_this$state","Chart","InputEdit","onChangeInput","TransferFund","amount","_this2","_this$props","onTransferCoin","cmps_InputEdit_InputEdit","changeAmount","onClick","observable","MovesList","moves","move","idx","ContactDetailsPage","match","params","getContactById","TransferCoin","email","phone","cmps_TransferFund_TransferFund","cmps_MovesList_MovesList","getMovesById","onClose","filter","computed","Signup","preventDefault","saveUser","history","onSubmit","signupUser","ContactEditPage","inputs","Object","keys","updateContact","then","currContact","deleteContact","_this3","saveContact","item","changeValue","PrivateRoute","Route","Redirect","App","HashRouter","NavLink","exact","alt","Switch","App_PrivateRoute","path","component","render","pages_ContactEditPage_ContactEditPage","pages_ContactDetailsPage_ContactDetailsPage","pages_Signup_Signup","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","_addContact","Promise","resolve","reject","length","arguments","undefined","txt","possible","i","charAt","Math","floor","random","_makeId","ContactService","getContacts","filterBy","contactsToReturn","toLocaleLowerCase","includes","sort","b","find","index","findIndex","splice","c","_updateContact","getEmptyContact","rootStore","classCallCheck","initializerDefineProperty","ContactStore_descriptor","conactId","updatedContact","action","StorageService","any","localStorage","JSON","stringify","load","str","parse","UserService","signup","addMove","at","Date","now","_reduceCoins","UserStore_descriptor","RootStore","configureDevtool","logEnabled","ReactDOM","index_module","Fragment","src_App","process","document","getElementById","URL","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bf62bc2f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n\r\n    userStore = this.props.store.UserStore;\r\n    \r\n    componentDidMount() {\r\n        this.userStore.loadUser()\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.userStore \r\n        return (\r\n            <div className=\"flex center\">\r\n                {\r\n                user &&\r\n                <div className=\"home-container\">\r\n                    <h2>Hello {user.name}</h2>\r\n                    <h4>Coins: {user.coins}</h4>\r\n                    {/* <h4>{user.moves}</h4> */}\r\n                </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\n\r\nconst ContactPreview = ({ contact }) => (\r\n    <div className=\"contact-prev\">\r\n        <span>{contact.name}</span>\r\n        <img className=\"img-contact\" src={`https://robohash.org/${contact.name}.png`}/>\r\n    </div >\r\n)\r\n\r\nexport default ContactPreview","import React from 'react'\r\nimport ContactPreview from '../../cmps/ContactPreview/ContactPreview'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ContactList = ({ contacts, onSetSelected }) => (\r\n    <div className=\"full\">\r\n        <ul>\r\n            {\r\n                contacts.map(contact =>\r\n                    <Link to={`/contact/${contact._id}`} key={contact._id}>\r\n                        <li >\r\n                            <ContactPreview contact={contact}/>\r\n                        </li>\r\n                    </Link>\r\n                )}\r\n\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default ContactList","import React, { Component } from 'react'\r\n\r\nimport ContactList from '../../cmps/ContactList/ContactList'\r\nimport { Link } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, computed } from 'mobx';\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactPage extends Component {\r\n\r\n    store = this.props.store;\r\n    contactStore = this.props.store.ContactStore;\r\n\r\n    componentDidMount() {\r\n        this.contactStore.fetchContacts()\r\n    }\r\n\r\n    async setFilter(ev) {\r\n        this.contactStore.fetchContacts({ term: ev.target.value })\r\n    }\r\n    render() {\r\n        const { contacts } = this.contactStore\r\n        return (\r\n            <div>\r\n                <div className=\"flex center column\">\r\n                    <Link to=\"/contact/edit\">\r\n                        <button className=\"btn\">Add Contact</button>\r\n                    </Link>\r\n                    <input className=\"search\" placeholder=\"Search\" id=\"inputFilter\" onChange={this.setFilter.bind(this)} type=\"text\" />\r\n                    {contacts &&\r\n                        <ContactList contacts={contacts} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactPage","async function getRate(coins){\r\n    const rate = await fetch(`https://blockchain.info/tobtc?currency=USD&value=${coins}`)\r\n    return rate.json()\r\n}\r\n\r\nasync function getMarketPrice(){\r\n    const chart = await fetch('https://api.blockchain.info/charts/market-price?format=json&cors=true')\r\n    return chart.json()\r\n}\r\nfunction getConfirmedTransactions(){\r\n\r\n}\r\n\r\nexport default{\r\n    getRate,\r\n    getMarketPrice\r\n}","import React from 'react'\r\nimport { Sparklines, SparklinesLine ,SparklinesBars} from 'react-sparklines';\r\n\r\n\r\nconst ContactList = ({ chart }) => {\r\n    var newChart = chart.values.reduce((newChart, currChart) => {\r\n        newChart.push(currChart.y)\r\n        return newChart\r\n    }, [])\r\n    return <div>\r\n        <Sparklines data={newChart}>\r\n            <SparklinesBars style={{ stroke: \"white\", fill: \"#41c3f9\", fillOpacity: \".25\" }} />\r\n            <SparklinesLine style={{ stroke: \"#41c3f9\", fill: \"green\" }} />\r\n        </Sparklines>\r\n    </div>\r\n}\r\n\r\nexport default ContactList","import React, { Component } from 'react'\r\n\r\nimport BitcoinService from '../../services/BitcoinService'\r\nimport Chart from '../../cmps/Chart/Chart'\r\n\r\nexport default class StatisticPage extends Component {\r\n    state = { rate: null, chart: null }\r\n\r\n    async componentDidMount() {\r\n        const rate = await BitcoinService.getRate(10)\r\n        this.setState({rate})\r\n        const chart = await BitcoinService.getMarketPrice()\r\n        console.log(chart)\r\n        \r\n        this.setState({chart})\r\n    }\r\n\r\n    render() {\r\n        const {rate, chart} = this.state\r\n\r\n        return (\r\n            <div className=\"statistic-container\">\r\n                {\r\n                    rate &&\r\n                    <h4>BTC: {rate}</h4>\r\n                }\r\n                {\r\n                    chart&&\r\n                    <Chart chart={chart}/>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\n\r\nconst InputEdit = (props) => {\r\n    const onChange = (ev) => props.onChangeInput(props.name, ev.target.value)\r\n\r\n    return (\r\n        <input className=\"signup-input full\" type={props.type || 'text'} name={props.name} value={props.value} onChange={onChange}/>\r\n    )\r\n}\r\n\r\nexport default InputEdit","import React, { Component } from 'react'\r\nimport InputEdit from '../InputEdit/InputEdit'\r\nimport { observable } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass TransferFund extends Component {\r\n    @observable\r\n    amount = 0;\r\n\r\n    changeAmount(name, value) {\r\n        this.amount = value\r\n    }\r\n    render() {\r\n        const { contact, onTransferCoin } = this.props\r\n        return (\r\n            <div>\r\n                <h2>Transfer coins to {contact.name}</h2>\r\n                Amount:\r\n            <InputEdit\r\n                    name=\"amount\"\r\n                    value={this.amount}\r\n                    onChangeInput={this.changeAmount.bind(this)} />\r\n                <button className=\"signup-btn\" onClick={() => {\r\n                    if(this.amount <= 0) return\r\n                    onTransferCoin(this.amount)\r\n                    this.amount = 0\r\n                }}>Transfer</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransferFund","import React from 'react'\r\n\r\n\r\nconst MovesList = ({ moves }) => {\r\n    return (\r\n        <div>\r\n            <h2>Your Moves:</h2>\r\n            {   \r\n                moves.map((move, idx) =>\r\n                    <div key={idx}>\r\n                        <h4>{move.amount}</h4>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovesList","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport TransferFund from '../../cmps/TransferFund/TransferFund'\r\nimport MoveList from '../../cmps/MovesList/MovesList'\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, computed } from 'mobx';\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactDetailsPage extends Component {\r\n    contactStore = this.props.store.ContactStore;\r\n    userStore = this.props.store.UserStore;\r\n\r\n    @observable\r\n    contact = null;\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.contact = await this.contactStore.getContactById(id)\r\n        this.userStore.loadUser()\r\n    }\r\n    TransferCoin(ev) {\r\n        this.userStore.TransferCoin(ev, this.contact)\r\n    }\r\n    @computed\r\n    get getMovesById() {\r\n        if (!this.contact) return []\r\n        return this.userStore.user.moves.filter(move => move._id === this.contact._id)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"details-container\">\r\n                {this.contact &&\r\n                    <div>\r\n                        <img className=\"img-contact\" src={`https://robohash.org/${this.contact.name}.png`} />\r\n                        <h2>{this.contact.name}</h2>\r\n                        <h4>{this.contact.email}</h4>\r\n                        <h4>{this.contact.phone}</h4>\r\n                        <TransferFund onTransferCoin={this.TransferCoin.bind(this)} contact={this.contact} />\r\n                        <MoveList moves={this.getMovesById} />\r\n                        <Link to=\"/contact\">\r\n                            <button className=\"signup-btn\" onClick={this.props.onClose}>back to list</button>\r\n                        </Link>\r\n                        <Link to={`/contact/edit/${this.contact._id}`}>\r\n                            <button className=\"signup-btn\">Edit contact</button>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ContactDetailsPage\r\n","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\n@inject('store')\r\n@observer\r\nclass Signup extends Component {\r\n\r\n    userStore = this.props.store.UserStore;\r\n\r\n    user = ''\r\n    \r\n    saveUser(ev){\r\n        this.user = ev.target.value\r\n    }\r\n\r\n    signupUser(ev){\r\n        ev.preventDefault()\r\n        this.userStore.saveUser(this.user)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <form className=\"flex center column\" onSubmit={this.signupUser.bind(this)}>\r\n                    <input className=\"signup-input\" onChange={this.saveUser.bind(this)} type=\"text\" placeholder=\"Enter your name\" />\r\n                    <button className=\"signup-btn\">Signup</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\nimport InputEdit from '../../cmps/InputEdit/InputEdit'\r\n\r\n@inject('store')\r\n@observer\r\nclass ContactEditPage extends Component {\r\n    contactStore = this.props.store.ContactStore;\r\n\r\n    @observable\r\n    contact = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n    inputs = Object.keys(this.contact)\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (!id) return\r\n        this.contact = await this.contactStore.getContactById(id)\r\n    }\r\n\r\n    async saveContact(ev) {\r\n        ev.preventDefault()\r\n        await this.contactStore.updateContact(this.contact)\r\n            .then(currContact => {\r\n                this.props.history.push(`/contact/${currContact._id || ''}`)\r\n            })\r\n    }\r\n    deleteContact() {\r\n        this.contactStore.deleteContact(this.contact._id)\r\n        this.props.history.push('/contact')\r\n    }\r\n    changeValue(name, value) {\r\n        this.contact[name] = value\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"edit-contact flex center column\">\r\n                <form className=\"flex center column full\" onSubmit={this.saveContact.bind(this)}>\r\n                    {\r\n                        this.inputs.map(item =>\r\n                            <InputEdit name={item}\r\n                                value={this.contact[item]}\r\n                                onChangeInput={this.changeValue.bind(this)} />\r\n                        )\r\n                    }\r\n                    <button className=\"signup-btn\">{this.contact._id ? 'save' : 'add'}</button>\r\n                </form>\r\n                <div>\r\n                    <Link to={`/contact/${this.contact._id || ''}`}>\r\n                        <button className=\"signup-btn\">Back</button>\r\n                    </Link>\r\n                    {\r\n                        this.contact._id &&\r\n                        <button className=\"signup-btn\" onClick={this.deleteContact.bind(this)}>Delete</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactEditPage","import React, { Component } from 'react';\nimport './assets/App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport ContactPage from './pages/ContactPage/ContactPage';\nimport StatisticPage from './pages/StatisticPage/StatisticPage';\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage';\nimport SignupPage from './pages/Signup/Signup';\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage';\nimport { observer, inject } from 'mobx-react';\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  NavLink,\n  Redirect\n} from 'react-router-dom';\n\n\nconst PrivateRoute = (props) => {\n  return props.user ? <Route {...props} /> : <Redirect to=\"/signup\" />\n}\n@inject('store')\n@observer\nclass App extends Component {\n  userStore = this.props.store.UserStore;\n\n  componentDidMount() {\n    this.userStore.loadUser()\n  }\n\n  render() {\n    const { user } = this.userStore\n\n    return (\n      <Router>\n        <div className=\"App full\">\n          <nav className=\"full\">\n            <ul className=\"navbar-container\">\n              <li>\n                <NavLink exact to=\"/\">\n                  <img className=\"logo\" src=\"./img/coin.png\" alt=\"coin\" />\n                </NavLink>\n              </li>\n              <NavLink exact to=\"/\">\n                <li>HOME</li>\n              </NavLink>\n              <NavLink to=\"/contact\">\n                <li>CONTACTS</li>\n              </NavLink>\n              <NavLink to=\"/StatisticPage\">\n                <li>STATISTIC</li>\n              </NavLink>\n            </ul>\n          </nav>\n\n          <Switch>\n            <PrivateRoute user={user} path=\"/\" exact component={HomePage} />\n            <PrivateRoute user={user} path=\"/StatisticPage\" component={StatisticPage} />\n            <PrivateRoute\n              user={user}\n              path=\"/contact/edit/:id?\"\n              render={props => {\n                return <ContactEditPage {...props} />;\n              }}\n            />\n            <PrivateRoute\n              user={user}\n              path=\"/contact/:id\"\n              render={props => {\n                return <ContactDetails {...props} />;\n              }}\n            />\n\n            <Route path=\"/signup\" render={props => {\n              return <SignupPage {...props} />\n            }} />\n            <PrivateRoute user={user} path=\"/contact\" component={ContactPage} />\n\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy) {\n      const term = filterBy.term.toLocaleLowerCase();\n      contactsToReturn = contacts.filter( contact => {\n        return contact.name.toLocaleLowerCase().includes(term) ||\n               contact.phone.toLocaleLowerCase().includes(term) ||\n               contact.email.toLocaleLowerCase().includes(term)\n      })\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return new Promise((resolve, reject) => { \n    const c = contacts.filter( contact => {\n      return contact.name.toLocaleLowerCase().includes(term) ||\n             contact.phone.toLocaleLowerCase().includes(term) ||\n             contact.email.toLocaleLowerCase().includes(term)\n    })\n\n    resolve(c)\n  })\n}\n\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  filter,\n  saveContact,\n  getEmptyContact\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import ContactService from '../services/ContactService'\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class ContactStore {\r\n  @observable\r\n  contacts = [];\r\n\r\n  constructor(rootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @action\r\n  async fetchContacts(filter) {\r\n    this.contacts = await ContactService.getContacts(filter)\r\n  }\r\n\r\n  @action\r\n  deleteContact(conactId) {\r\n    ContactService.deleteContact(conactId)\r\n  }\r\n\r\n  @action\r\n  updateContact(updatedContact){\r\n    return ContactService.saveContact(updatedContact)\r\n  }\r\n\r\n  @action\r\n  async getContactById(id){\r\n      return await ContactService.getContactById(id)\r\n  }\r\n}\r\n\r\n","export default {\r\n    store,\r\n    load\r\n}\r\n\r\nfunction store(key, any) {\r\n    localStorage[key] = JSON.stringify(any);\r\n}\r\n\r\nfunction load(key) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n}\r\n","import StorageService from './StorageService'\r\n\r\nexport default {\r\n    loadUser,\r\n    signup,\r\n    addMove,\r\n}\r\n\r\nvar user;\r\n\r\nfunction loadUser() {\r\n    user = StorageService.load('user')\r\n    return user\r\n}\r\n\r\nfunction signup(name) {\r\n    user = {\r\n        name,\r\n        coins: 100, \r\n        moves: []\r\n    }\r\n    StorageService.store('user', user)\r\n    return user\r\n}\r\nfunction addMove(amount, contact) {\r\n    const {_id, name } = contact\r\n    user.moves.push({\r\n        _id,\r\n        to: name,\r\n        at: Date.now(),\r\n        amount\r\n    })\r\n    _reduceCoins(amount)\r\n    StorageService.store('user', user)\r\n}\r\n\r\nfunction _reduceCoins(amount) {\r\n    user.coins -= amount\r\n    StorageService.store('user', user)\r\n}","import { observable, action } from 'mobx';\r\nimport UserService from '../services/UserService'\r\n\r\n\r\nexport default class UserStore {\r\n    @observable\r\n    user = {};\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n    @action\r\n    loadUser() {\r\n        this.user = UserService.loadUser()\r\n    }\r\n\r\n    @action\r\n    saveUser(user){\r\n        this.user = UserService.signup(user)\r\n    }\r\n    @action\r\n    TransferCoin(amount, contact){\r\n        UserService.addMove(amount, contact)\r\n        this.loadUser()\r\n    }\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react';\nimport DevTools, { configureDevtool } from 'mobx-react-devtools';\n\nconst rootStore = new RootStore();\n\nconfigureDevtool({\n    // Turn on logging changes button programmatically:\n    logEnabled: true,\n    // Turn off displaying components updates button programmatically:\n  //   updatesEnabled: false,\n    // Log only changes of type `reaction`\n    // (only affects top-level messages in console, not inside groups)\n  //   logFilter: change => change.type === 'reaction'\n  });\n\n  ReactDOM.render(\n    <Provider store={rootStore}>\n      <React.Fragment>\n        <App />\n        {process.env.NODE_ENV === 'development' && <DevTools/>}\n      </React.Fragment>\n    </Provider>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.register();","import ContactStore from './ContactStore';\r\nimport UserStore from './UserStore'\r\n\r\nexport default class RootStore {\r\n    constructor(){\r\n        this.ContactStore = new ContactStore(this)\r\n        this.UserStore = new UserStore(this)\r\n    }\r\n}"],"sourceRoot":""}